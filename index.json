[{"authors":["admin"],"categories":null,"content":" Avoiding Knowledge Respect for knowledge Absorbing knowledge Master knowledge Spread knowledge  ","date":1563954389,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1563954389,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://coderxdlee.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":" Avoiding Knowledge Respect for knowledge Absorbing knowledge Master knowledge Spread knowledge  ","tags":null,"title":"M X","type":"authors"},{"authors":["M X"],"categories":["SwiftUI"],"content":"","date":1563954389,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563954389,"objectID":"d77a54ad5e70c0e354963d33db9f8afa","permalink":"https://coderxdlee.github.io/post/swiftui/1-text_and_image/1.9_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%83%8F%E5%92%8C%E5%85%B6%E5%AE%83%E8%A7%86%E5%9B%BE%E4%BD%9C%E4%B8%BA%E8%83%8C%E6%99%AF/","publishdate":"2019-07-24T15:46:29+08:00","relpermalink":"/post/swiftui/1-text_and_image/1.9_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%83%8F%E5%92%8C%E5%85%B6%E5%AE%83%E8%A7%86%E5%9B%BE%E4%BD%9C%E4%B8%BA%E8%83%8C%E6%99%AF/","section":"post","summary":"","tags":["SwiftUI"],"title":"1.9_如何使用图像和其它视图作为背景","type":"post"},{"authors":["M X"],"categories":["SwiftUI"],"content":"","date":1563954361,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563954361,"objectID":"6bb26cdc2adaf8cb830077b8110d51aa","permalink":"https://coderxdlee.github.io/post/swiftui/1-text_and_image/1.8_%E5%A6%82%E4%BD%95%E6%98%BE%E7%A4%BA%E5%87%A0%E4%BD%95%E5%BD%A2%E7%8A%B6/","publishdate":"2019-07-24T15:46:01+08:00","relpermalink":"/post/swiftui/1-text_and_image/1.8_%E5%A6%82%E4%BD%95%E6%98%BE%E7%A4%BA%E5%87%A0%E4%BD%95%E5%BD%A2%E7%8A%B6/","section":"post","summary":"","tags":["SwiftUI"],"title":"1.8_如何显示几何形状","type":"post"},{"authors":["M X"],"categories":["SwiftUI"],"content":"","date":1563954329,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563954329,"objectID":"b89862110d29df1cb2a98f4fee3a3c1b","permalink":"https://coderxdlee.github.io/post/swiftui/1-text_and_image/1.7_%E5%A6%82%E4%BD%95%E6%B8%B2%E6%9F%93%E6%B8%90%E5%8F%98/","publishdate":"2019-07-24T15:45:29+08:00","relpermalink":"/post/swiftui/1-text_and_image/1.7_%E5%A6%82%E4%BD%95%E6%B8%B2%E6%9F%93%E6%B8%90%E5%8F%98/","section":"post","summary":"","tags":["SwiftUI"],"title":"1.7_如何渲染渐变","type":"post"},{"authors":["M X"],"categories":["SwiftUI"],"content":"","date":1563954307,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563954307,"objectID":"cf6ffdbb1c994faad0b4746884cab952","permalink":"https://coderxdlee.github.io/post/swiftui/1-text_and_image/1.6_%E5%A6%82%E4%BD%95%E8%B0%83%E6%95%B4%E5%9B%BE%E5%83%8F%E8%A7%86%E5%9B%BE%E7%9A%84%E5%A1%AB%E5%85%85%E6%A8%A1%E5%BC%8F/","publishdate":"2019-07-24T15:45:07+08:00","relpermalink":"/post/swiftui/1-text_and_image/1.6_%E5%A6%82%E4%BD%95%E8%B0%83%E6%95%B4%E5%9B%BE%E5%83%8F%E8%A7%86%E5%9B%BE%E7%9A%84%E5%A1%AB%E5%85%85%E6%A8%A1%E5%BC%8F/","section":"post","summary":"","tags":["SwiftUI"],"title":"1.6_如何调整图像视图的填充模式","type":"post"},{"authors":["M X"],"categories":["SwiftUI"],"content":"","date":1563954255,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563954255,"objectID":"bcd80c540133b4c4f850d3403d4e3377","permalink":"https://coderxdlee.github.io/post/swiftui/1-text_and_image/1.5_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%83%8F%E8%A7%86%E5%9B%BE%E7%BB%98%E5%88%B6%E5%9B%BE%E5%83%8F/","publishdate":"2019-07-24T15:44:15+08:00","relpermalink":"/post/swiftui/1-text_and_image/1.5_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%83%8F%E8%A7%86%E5%9B%BE%E7%BB%98%E5%88%B6%E5%9B%BE%E5%83%8F/","section":"post","summary":"","tags":["SwiftUI"],"title":"1.5_如何使用图像视图绘制图像","type":"post"},{"authors":["M X"],"categories":["SwiftUI"],"content":"","date":1563954209,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563954209,"objectID":"c122de324e0c11ab95cb0738749a23d0","permalink":"https://coderxdlee.github.io/post/swiftui/1-text_and_image/1.4_%E5%A6%82%E4%BD%95%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%96%87%E6%9C%AC%E8%A7%86%E5%9B%BE%E4%B8%AD%E7%9A%84%E6%96%87%E6%9C%AC/","publishdate":"2019-07-24T15:43:29+08:00","relpermalink":"/post/swiftui/1-text_and_image/1.4_%E5%A6%82%E4%BD%95%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%96%87%E6%9C%AC%E8%A7%86%E5%9B%BE%E4%B8%AD%E7%9A%84%E6%96%87%E6%9C%AC/","section":"post","summary":"","tags":["SwiftUI"],"title":"1.4_如何格式化文本视图中的文本","type":"post"},{"authors":["M X"],"categories":["SwiftUI"],"content":"","date":1563954148,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563954148,"objectID":"8be44a51185d5c70ca4c4bc7d2fb462d","permalink":"https://coderxdlee.github.io/post/swiftui/1-text_and_image/1.3_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%AD%97%E4%BD%93%E9%A2%9C%E8%89%B2%E8%A1%8C%E8%B7%9D%E7%AD%89%E8%AE%BE%E7%BD%AE%E6%96%87%E6%9C%AC%E8%A7%86%E5%9B%BE%E7%9A%84%E6%A0%B7%E5%BC%8F/","publishdate":"2019-07-24T15:42:28+08:00","relpermalink":"/post/swiftui/1-text_and_image/1.3_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%AD%97%E4%BD%93%E9%A2%9C%E8%89%B2%E8%A1%8C%E8%B7%9D%E7%AD%89%E8%AE%BE%E7%BD%AE%E6%96%87%E6%9C%AC%E8%A7%86%E5%9B%BE%E7%9A%84%E6%A0%B7%E5%BC%8F/","section":"post","summary":"","tags":["SwiftUI"],"title":"1.3_如何使用字体颜色行距等设置文本视图的样式","type":"post"},{"authors":["M X"],"categories":["SwiftUI"],"content":"","date":1563946501,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563946501,"objectID":"c8de0192120507accbd6cb1c301d2f14","permalink":"https://coderxdlee.github.io/post/swiftui/1-text_and_image/1.2_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E6%96%87%E6%9C%AC%E8%A7%86%E5%9B%BE%E5%88%9B%E5%BB%BA%E9%9D%99%E6%80%81%E6%A0%87%E7%AD%BE/","publishdate":"2019-07-24T13:35:01+08:00","relpermalink":"/post/swiftui/1-text_and_image/1.2_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E6%96%87%E6%9C%AC%E8%A7%86%E5%9B%BE%E5%88%9B%E5%BB%BA%E9%9D%99%E6%80%81%E6%A0%87%E7%AD%BE/","section":"post","summary":"","tags":["SwiftUI"],"title":"1.2 如何使用文本视图创建静态标签","type":"post"},{"authors":["M X"],"categories":["SwfitUI"],"content":" 提示: 您可能认为本章完全可以跳过，但除非你是一个 Swift 天才，否则你应该读到最后再确定。\n 如图，自 Xcode 11 之后，基本的 Single View App 模板为我们提供以下内容:\n AppDelegate.swift  这个文件负责监视外部事件。例如，如果另一个应用程序试图向您发送要打开的文件。  SceneDelegate.swift  这个文件负责管理应用程序的显示方式。例如让多个实例同时运行，或者当一个实例移动到后台时采取操作。  ContentView.swift  这个文件是我们的初始用户界面。如果这是一个 UIKit 项目，这个文件相当于是 Xcode 提供给我们的 ViewController 类。  Assets.xcassets  这个文件是项目的资产目录。存储着我们项目中使用的所有图像和颜色。  LaunchScreen.storyboard  这是应用加载时显示的屏幕。  Info.plist  这是一个属性列表文件，在本例中，它用于存储应用程序的系统级设置。例如，应该在 iOS 主屏幕的图标下面显示什么名称。  Preview content\n 一个名为 Preview content 的组，其中包含另一个名为 Preview Assests 的资产目录。   就是这样 - 这是一个令人愉快的少量代码和资源，这意味着我们可以在此基础上进行构建。\n我们真正关心的是 ContentView.swift， 事实上，这是唯一重要的部分。这是我们应用程序的主要功能，在这里我们可以立即开始尝试各种 SwiftUI 代码。\n首先，是什么让 ContentView.swift 显示在屏幕上？\n好吧，如果你还记得我说过 SceneDelegate.swift 负责管理应用程序的显示方式。那么，继续打开 SceneDelegate.swift，您会看到下面的代码:\nlet window = UIWindow(windowScene: windowScene) window.rootViewController = UIHostingController(rootView: ContentView()) self.window = window window.makeKeyAndVisible()  这段代码创建了一个新的 ContentView 实例（这是我们即将看到的主要功能），并将其放在 window 中，以便在屏幕上显示。它通过显示 ContentView 的第一个实例，可以有效地引导我们的应用程序，并从那里结束 - 你想做什么？\n打开 ContentView.swift ，让我们看看实际的 SwiftUI 代码。您应该看到这样的代码:\nimport SwiftUI struct ContentView : View { var body: some View { Text(\u0026quot;Hello World\u0026quot;) } } #if DEBUG struct ContentView_Previews : PreviewProvider { static var previews: some View { ContentView() } } #endif  这不是很多代码，但它确实包含了大量代码。\n首先，请注意，ContentView 是一个结构体（struct）。熟悉 UIKit 的开发人员知道 - 我们从用户界面的所有值类型的不可变性和简单性中获益巨大！不熟悉 UIKit 的人\u0026hellip; 嗯，只是点头微笑 - 你从来不知道我们曾经的痛苦。\n其次，ContentView 符合 View 协议。你想在 SwiftUI 中显示的所有内容都需要符合 View，这实际上只意味着一件事: 你需要一个名为 body 的属性来返回某种 View。\n第三，body 的返回类型是 some View。some 关键字是在 Swift 5.1 中新增的，是一个名为 不透明返回类型（opaque return types） 的功能的一部分，在这种情况下，它的意思是 将返回某种视图，但 SwiftUI 不需要知道（或关心）什么。\n重要说明: 返回 some View 意味着 body 属性将返回符合 View 协议的内容。你不能返回很多东西或忘记返回任何东西 \u0026ndash; Swift 编译器将拒绝构建你的代码。要清楚，您的视图正文必须返回一个子视图。\n第四，body属性中有 Text(\u0026quot;hello world\u0026quot;)，它创建了文本内容为 “hello world”的标签。\n最后，在 ContentView 下面的是一个类似但不同的 struct，称为 ContentView_Previews。它不符合 View 协议，因为它专门用于在 Xcode 中显示 视图预览（Preview），而不是在真实 app 中显示在屏幕上。这就是为什么你会看到它在 #if DEBUG 和 #endif 之间 - 当我们的应用程序在调试环境中运行时，这段代码只构建在 *成品（finished product）*中，因为它在生产应用程序（Production app）中没有意义。\n我们很快就会更详细地看一下这些组件（components），但首先让我们看一下 Text 组件。\n","date":1563868318,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563868318,"objectID":"9d1b9da570681cca6df9924ec098df0b","permalink":"https://coderxdlee.github.io/post/swiftui/1-text_and_image/1.1_%E5%B7%A5%E7%A8%8B%E6%A8%A1%E6%9D%BF%E4%BB%8B%E7%BB%8D/","publishdate":"2019-07-23T15:51:58+08:00","relpermalink":"/post/swiftui/1-text_and_image/1.1_%E5%B7%A5%E7%A8%8B%E6%A8%A1%E6%9D%BF%E4%BB%8B%E7%BB%8D/","section":"post","summary":"The introduction of SwiftUI project template","tags":["SwiftUI"],"title":"1.1 工程模板介绍","type":"post"}]