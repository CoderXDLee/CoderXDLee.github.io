<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Container on M X</title>
    <link>https://coderxdlee.github.io/tags/container/</link>
    <description>Recent content in Container on M X</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>M X ©{year}</copyright>
    <lastBuildDate>Mon, 05 Aug 2019 11:22:27 +0800</lastBuildDate>
    
	    <atom:link href="https://coderxdlee.github.io/tags/container/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>7.4_如何将视图组合在一起</title>
      <link>https://coderxdlee.github.io/post/swiftui/7-container/7.4_%E5%A6%82%E4%BD%95%E5%B0%86%E8%A7%86%E5%9B%BE%E7%BB%84%E5%90%88%E5%9C%A8%E4%B8%80%E8%B5%B7/</link>
      <pubDate>Mon, 05 Aug 2019 11:22:27 +0800</pubDate>
      
      <guid>https://coderxdlee.github.io/post/swiftui/7-container/7.4_%E5%A6%82%E4%BD%95%E5%B0%86%E8%A7%86%E5%9B%BE%E7%BB%84%E5%90%88%E5%9C%A8%E4%B8%80%E8%B5%B7/</guid>
      <description>&lt;!-- more --&gt;

&lt;p&gt;如果我们需要将多个视图作为一个视图，例如: 一起转换。那么，我们应该使用 SwiftUI 的 &lt;code&gt;Group&lt;/code&gt; 视图。这一点尤为重要，因为出于底层的技术原因，我们一次性最多只能向父视图添加十个子视图。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct ContentView: View {
    var body: some View {
        VStack {
            Text(&amp;quot;line - 0&amp;quot;)
            Text(&amp;quot;line - 1&amp;quot;)
            Text(&amp;quot;line - 2&amp;quot;)
            Text(&amp;quot;line - 3&amp;quot;)
            Text(&amp;quot;line - 4&amp;quot;)
            Text(&amp;quot;line - 5&amp;quot;)
            Text(&amp;quot;line - 6&amp;quot;)
            Text(&amp;quot;line - 7&amp;quot;)
            Text(&amp;quot;line - 8&amp;quot;)
            Text(&amp;quot;line - 9&amp;quot;)
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果预览:
&lt;img src=&#34;img/group_10_lines.png&#34; alt=&#34;group_10_lines&#34; title=&#34;Show 10 lines&#34; /&gt;
一切正常，但是，当我们尝试添加第11行文本的时候，就会报错:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Ambiguous reference to member &#39;buildBlock&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;错误预览:
&lt;img src=&#34;img/grouo_11_lines_error.png&#34; alt=&#34;grouo_11_lines_error&#34; title=&#34;When show the 11th line, throw a error&#34; /&gt;
后面是一串这样的错误信息:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;ContentView.swift:10:16: Found this candidate (SwiftUI.ViewBuilder)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这是因为 SwiftUI 的视图构建系统中有各种各样的代码设计，可以让我们添加1个视图、2个视图、2个视图、3个视图、4个视图、5个视图、6个视图、7个视图、8个视图、9个视图和10个视图，但是不适用于11个或更多视图 - 这不起作用。&lt;/p&gt;

&lt;p&gt;幸运的是，我们可以像这样使用 &lt;code&gt;group&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct ContentView: View {
    var body: some View {
        VStack {
            Group {
                Text(&amp;quot;line - 0&amp;quot;)
                Text(&amp;quot;line - 1&amp;quot;)
                Text(&amp;quot;line - 2&amp;quot;)
                Text(&amp;quot;line - 3&amp;quot;)
                Text(&amp;quot;line - 4&amp;quot;)
                Text(&amp;quot;line - 5&amp;quot;)
            }
            Group {
                Text(&amp;quot;line - 6&amp;quot;)
                Text(&amp;quot;line - 7&amp;quot;)
                Text(&amp;quot;line - 8&amp;quot;)
                Text(&amp;quot;line - 9&amp;quot;)
                Text(&amp;quot;line - 10&amp;quot;)
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果预览:
&lt;img src=&#34;img/group_11_lines.png&#34; alt=&#34;group_11_lines&#34; title=&#34;Group 11 lines&#34; /&gt;
这产生了完全相同的结果，现在我们可以超过10个视图的限制，因为 &lt;code&gt;VStack&lt;/code&gt; 中只包含两个视图——两个组。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>7.3_如何给导航视图添加bar_items</title>
      <link>https://coderxdlee.github.io/post/swiftui/7-container/7.3_%E5%A6%82%E4%BD%95%E7%BB%99%E5%AF%BC%E8%88%AA%E8%A7%86%E5%9B%BE%E6%B7%BB%E5%8A%A0bar_items/</link>
      <pubDate>Mon, 05 Aug 2019 11:06:31 +0800</pubDate>
      
      <guid>https://coderxdlee.github.io/post/swiftui/7-container/7.3_%E5%A6%82%E4%BD%95%E7%BB%99%E5%AF%BC%E8%88%AA%E8%A7%86%E5%9B%BE%E6%B7%BB%E5%8A%A0bar_items/</guid>
      <description>&lt;!-- more --&gt;

&lt;p&gt;通过 &lt;code&gt;navigationBarItems()&lt;/code&gt; 修饰符，我们可以在导航视图的 &lt;em&gt;前缘(leading)&lt;/em&gt; 和 &lt;em&gt;后缘(trailing)&lt;/em&gt;  添加 &lt;strong&gt;bar items&lt;/strong&gt;。这些 &lt;strong&gt;bar items&lt;/strong&gt; 可能是一个可点击的按钮，但没有任何限制 - 您可以添加任何类型的视图。&lt;/p&gt;

&lt;p&gt;例如: 我们可以在导航视图的后缘(trailing)添加一个 &lt;strong&gt;帮助按钮&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct ContentView: View {
    var body: some View {
        NavigationView {
            Text(&amp;quot;Hello SwiftUI&amp;quot;)
                .navigationBarTitle(Text(&amp;quot;Welcome&amp;quot;))
            .navigationBarItems(trailing:
                Button(action: {
                    print(&amp;quot;Help tapped!&amp;quot;)
                }, label: {
                    Text(&amp;quot;Help&amp;quot;)
                })
            )
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果预览:
&lt;img src=&#34;img/navigationview_add_bar_items.png&#34; alt=&#34;navigationview_add_bar_items&#34; title=&#34;Add bar items.&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>7.2_如何在导航视图中嵌入视图</title>
      <link>https://coderxdlee.github.io/post/swiftui/7-container/7.2_%E5%A6%82%E4%BD%95%E5%9C%A8%E5%AF%BC%E8%88%AA%E8%A7%86%E5%9B%BE%E4%B8%AD%E5%B5%8C%E5%85%A5%E8%A7%86%E5%9B%BE/</link>
      <pubDate>Fri, 02 Aug 2019 18:18:22 +0800</pubDate>
      
      <guid>https://coderxdlee.github.io/post/swiftui/7-container/7.2_%E5%A6%82%E4%BD%95%E5%9C%A8%E5%AF%BC%E8%88%AA%E8%A7%86%E5%9B%BE%E4%B8%AD%E5%B5%8C%E5%85%A5%E8%A7%86%E5%9B%BE/</guid>
      <description>

&lt;!-- more --&gt;

&lt;h3 id=&#34;1-简介&#34;&gt;1. 简介&lt;/h3&gt;

&lt;p&gt;SwiftUI 中的 &lt;code&gt;NavigationView&lt;/code&gt; 几乎等同于 UIKit 中的 &lt;code&gt;UINavigationController&lt;/code&gt;，因为它不仅可以呈现内容，而且它能够处理视图之间的导航，并在屏幕顶部放置一个导航栏。&lt;/p&gt;

&lt;h3 id=&#34;2-嵌入文本视图&#34;&gt;2. 嵌入文本视图&lt;/h3&gt;

&lt;p&gt;接下来，我们以最简单的形式，将文本视图放入导航视图中，如下所示:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct ContentView: View {
    var body: some View {
        NavigationView {
            Text(&amp;quot;Hello SwiftUI&amp;quot;)
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果预览:
&lt;img src=&#34;img/navigationview_embed_text_no_navigationbar.png&#34; alt=&#34;navigationview_embed_text_no_navigationbar&#34; title=&#34;Embed a text in  the navigationView&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-设置导航栏标题&#34;&gt;3. 设置导航栏标题&lt;/h3&gt;

&lt;p&gt;但是这样，顶部的导航栏为空。因此，通常在嵌入的内容上使用 &lt;code&gt;navigationBarTitle()&lt;/code&gt; 修饰符，因此，我们可以在屏幕顶部添加标题，如下所示:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;NavigationView {
    Text(&amp;quot;Hello SwiftUI&amp;quot;)
        .navigationBarTitle(Text(&amp;quot;Welcome&amp;quot;))
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果预览:
&lt;img src=&#34;img/navigationview_embed_text_has_navigationbar.png&#34; alt=&#34;navigationview_embed_text_has_navigationbar&#34; title=&#34;Embed a text in the navigationView which has a navigationBar&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;4-自定义导航标题&#34;&gt;4. 自定义导航标题&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;navigationBarTitle()&lt;/code&gt; 修饰符为我们提供了一些自定义选项。&lt;/p&gt;

&lt;p&gt;例如: 默认情况下，它将从呈现它的任何视图继承大型标题显示模式，或者如果它是初始视图，那么它将使用大型标题。但是，如果我们想强制启用或禁用大标题，那么我们应该使用 &lt;code&gt;inline&lt;/code&gt; 参数，如下所示:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.navigationBarTitle(Text(&amp;quot;Welcome&amp;quot;), displayMode: .inline)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果预览:
&lt;img src=&#34;img/navigationview_navigationbar_inline.png&#34; alt=&#34;navigationview_navigationbar_inline&#34; title=&#34;Display mode is inline.&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>7.1_使用容器</title>
      <link>https://coderxdlee.github.io/post/swiftui/7-container/7.1_%E4%BD%BF%E7%94%A8%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Fri, 02 Aug 2019 18:06:43 +0800</pubDate>
      
      <guid>https://coderxdlee.github.io/post/swiftui/7-container/7.1_%E4%BD%BF%E7%94%A8%E5%AE%B9%E5%99%A8/</guid>
      <description>&lt;!-- more --&gt;

&lt;p&gt;SwiftUI 设计为开箱即用，这意味着我们可以根据需要将一个视图放在另一个视图中。&lt;/p&gt;

&lt;p&gt;这在处理我们习惯的主要容器视图（如导航控制器和选项卡栏控制器）时特别有用。我们可以将想要的任何视图直接放置到另一个容器视图中，Swiftui将自动调整其布局。&lt;/p&gt;

&lt;p&gt;在这方面，Swiftui自己的容器—— &lt;code&gt;NavigationView&lt;/code&gt;、&lt;code&gt;TabbedView&lt;/code&gt;、&lt;code&gt;Group&lt;/code&gt; 等等——与我们用自己的视图组合制作的容器没有什么不同。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
