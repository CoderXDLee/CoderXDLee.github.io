<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Presenting views on M X</title>
    <link>https://coderxdlee.github.io/tags/presenting-views/</link>
    <description>Recent content in Presenting views on M X</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>M X ©{year}</copyright>
    <lastBuildDate>Mon, 05 Aug 2019 17:40:40 +0800</lastBuildDate>
    
	    <atom:link href="https://coderxdlee.github.io/tags/presenting-views/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>9.2_点击列表行时如何push新视图</title>
      <link>https://coderxdlee.github.io/post/swiftui/9-presenting_views/9.2_%E7%82%B9%E5%87%BB%E5%88%97%E8%A1%A8%E8%A1%8C%E6%97%B6%E5%A6%82%E4%BD%95push%E6%96%B0%E8%A7%86%E5%9B%BE/</link>
      <pubDate>Mon, 05 Aug 2019 17:40:40 +0800</pubDate>
      
      <guid>https://coderxdlee.github.io/post/swiftui/9-presenting_views/9.2_%E7%82%B9%E5%87%BB%E5%88%97%E8%A1%A8%E8%A1%8C%E6%97%B6%E5%A6%82%E4%BD%95push%E6%96%B0%E8%A7%86%E5%9B%BE/</guid>
      <description>&lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;SwiftUI 中没有 &lt;code&gt;UITableView&lt;/code&gt; 的 &lt;code&gt;didSelectRowAt&lt;/code&gt; 方法的直接等价物，但它不需要这样的方法，因为我们可以将 &lt;code&gt;NavigationLink&lt;/code&gt; 与列表行结合起来并免费获取这种 behavior。&lt;/p&gt;

&lt;p&gt;我们需要将列表与我们可以使用的一些内容放在一起。 首先，我们需要某种数据来显示:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct Restaurant: Identifiable {
    var id = UUID()
    var name: String
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们需要一个列表行视图，一次显示一个餐厅:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct RestaurantRow: View {
    
    var restaurant: Restaurant
    
    var body: some View {
        Text(restaurant.name)
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后，我们需要一个视图，其中包含可用餐厅的列表:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct ContentView: View {
    var body: some View {
        let first = Restaurant(name: &amp;quot;Joe&#39;s Original&amp;quot;)
        let restaurants = [first]
        
        return NavigationView {
            List(restaurants, rowContent: { restaurant in
                RestaurantRow(restaurant: restaurant)
            }).navigationBarTitle(Text(&amp;quot;Select a restaurant&amp;quot;))
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果预览:
&lt;img src=&#34;img/9.2_restaurant_list.png&#34; alt=&#34;9.2_restaurant_list&#34; title=&#34;A restaurant list&#34; /&gt;
这段代码在列表中显示一家餐馆，但是不可选。&lt;/p&gt;

&lt;p&gt;为了使点击一行显示详细视图，我们首先需要一个可以显示餐厅的详细视图。 例如，像这样:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct RestaurantRow: View {
    
    var restaurant: Restaurant
    
    var body: some View {
        Text(&amp;quot;Come and eat at \(restaurant.name)&amp;quot;)
            .font(.largeTitle)
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有了它，我们现在可以在 &lt;code&gt;NavigationLink&lt;/code&gt; 中包装 &lt;code&gt;RestaurantRow&lt;/code&gt; 行，如下所示:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct ContentView: View {
    var body: some View {
        let first = Restaurant(name: &amp;quot;Joe&#39;s Original&amp;quot;)
        let restaurants = [first]
        
        return NavigationView {
            List(restaurants, rowContent: { restaurant in
                NavigationLink(destination: RestaurantRow(restaurant: restaurant)) {
                    RestaurantRow(restaurant: restaurant)
                }
            }).navigationBarTitle(Text(&amp;quot;Select a restaurant&amp;quot;))
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果预览:
&lt;img src=&#34;img/9.2_select_a_restaurant.gif&#34; alt=&#34;9.2_select_a_restaurant&#34; title=&#34;Select a restaurant&#34; /&gt;
如您所见，使用 &lt;code&gt;RestaurantRow(restaurant: restaurant)&lt;/code&gt; 作为行点击事件的目的地，因此将创建 &lt;code&gt;RestaurantView&lt;/code&gt; 并传递附加到列表行的餐厅。&lt;/p&gt;

&lt;p&gt;请注意，我们是如何在导航按钮中添加列表行的 — SwiftUI 凭借其出色的构图能力使其工作正常。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>9.1_如何将新视图push到NavigationView</title>
      <link>https://coderxdlee.github.io/post/swiftui/9-presenting_views/9.1_%E5%A6%82%E4%BD%95%E5%B0%86%E6%96%B0%E8%A7%86%E5%9B%BEpush%E5%88%B0navigationview/</link>
      <pubDate>Mon, 05 Aug 2019 16:58:35 +0800</pubDate>
      
      <guid>https://coderxdlee.github.io/post/swiftui/9-presenting_views/9.1_%E5%A6%82%E4%BD%95%E5%B0%86%E6%96%B0%E8%A7%86%E5%9B%BEpush%E5%88%B0navigationview/</guid>
      <description>&lt;!-- more --&gt;

&lt;p&gt;如果我们有一个导航视图，并且希望将一个新视图 push 到 SwiftUI 的导航堆栈上，那么我们应该使用 &lt;code&gt;NavigationLink&lt;/code&gt;，在 beta 1和2 中使用的是 &lt;code&gt;NavigationButton&lt;/code&gt;。这将一个目标作为它的第一个参数，以及在按钮内部显示什么作为它的第二个参数（或者作为一个尾随闭包），并负责将新视图和动画一起 push 到堆栈上。&lt;/p&gt;

&lt;p&gt;例如: 如果我们有这样一个 &lt;strong&gt;详细视图&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct DetailView: View {
    var body: some View {
        Text(&amp;quot;Detail&amp;quot;)
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后我们可以这样呈现它:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct ContentView: View {
    var body: some View {
        NavigationView {
            NavigationLink(destination: DetailView(), label: {
                Text(&amp;quot;Click!&amp;quot;)
                    .background(Color.red)
            })
            .navigationBarTitle(Text(&amp;quot;Navigation&amp;quot;))
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果预览:
&lt;img src=&#34;img/9.1_push_view_to_navigationview.png&#34; alt=&#34;9.1_push_view_to_navigationview&#34; title=&#34;Push a view onto the navigationView&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
